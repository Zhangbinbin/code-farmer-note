<chapter xml:id="chapter7" xmlns="http://docbook.org/ns/docbook" version="5.0" xml:lang="zh-CN"
  xmlns:xlink='http://www.w3.org/1999/xlink'>
  <title>高级NAT配置</title>
  <para>
    <emphasis>NAT</emphasis>即网络地址转换，更直白一些就是通过地址/端口的映射来实现内网/外网的互相访问，这里包括两个方面，一方面是增强访问，比如<emphasis>虚拟服务器</emphasis>，一方面是限制访问，比如<emphasis>DMZ配置</emphasis>和<emphasis>一对一地址映射</emphasis>。
  </para>
  <section>
    <title>准备工作</title>
    <para>
      这里我们沿用第六章里的配置即可。
    </para>
    <section>
      <title>目标描述</title>
      <para>
        下面请看我们的设计图：
      </para>
      <imageobject>
        <imagedata align="right" width="6in" format="PNG"
          fileref="../images/high-grade-nat.png"/>
      </imageobject>
      <para>
        相对于前面几章，我们在lan侧添加了<emphasis>serverPC</emphasis>。
      </para>
    </section>
    <section>
      <title>创建交换机网络</title>
      <screen>
<prompt>liunx@liunx-G41MT-S2PT:~/Work/DocBook/work/code-farmer-note/examples/chapter7$ </prompt><userinput>cat switch.sh</userinput>
#!/bin/bash -
set -o nounset                              # Treat unset variables as an error

echo "begin switch..."
vde_switch --daemon --sock /tmp/switch --mgmt /tmp/switch.mgmt
slirpvde -d -s /tmp/switch -dhcp
echo "OK"
      </screen>
      <para>
        我们首先运行<emphasis>switch.sh</emphasis>，这样其他的设备才能接入网络。
      </para>
      <screen>
<prompt>liunx@liunx-G41MT-S2PT:~/Work/DocBook/work/code-farmer-note/examples/chapter7$ </prompt><userinput>./switch.sh</userinput>
      </screen>
    </section>
    <section>
      <title>创建<emphasis>wan侧PC</emphasis></title>
      <screen>
<prompt>liunx@liunx-G41MT-S2PT:~/Work/DocBook/work/code-farmer-note/examples/chapter7$ </prompt><userinput>cat wanPC.sh</userinput>
#!/bin/bash -
set -o nounset                              # Treat unset variables as an error

/usr/local/bin/qemu-system-i386 \
        -m 64M \
        -kernel images/openwrt-x86-generic-vmlinuz \
        -hda images/openwrt-x86-generic-rootfs-ext4.img \
        -append "root=/dev/sda console=ttyS0" \
        -enable-kvm \
        -daemonize \
        -vnc :61 \
        -net nic,vlan=0,model=e1000,macaddr=52:54:00:12:34:41 \
        -net vde,sock=/tmp/switch
      </screen>
    </section>
    <section>
      <title>创建路由器</title>
      <para>这里我们选用<emphasis>vnc</emphasis>远程桌面连接，而不是串口输出了，所以要对<emphasis>buildroot</emphasis>的参数做一些修改：</para>
      <screen>
System configuration  --->
    (tty1) Port to run a getty (login prompt) on
      </screen>
      <screen>
<prompt>liunx@liunx-G41MT-S2PT:~/Work/DocBook/work/code-farmer-note/examples/chapter7$ </prompt><userinput>cat router.sh</userinput>
#!/bin/bash -
set -o nounset                              # Treat unset variables as an error

/usr/local/bin/qemu-system-i386 \
        -m 64M \
        -kernel images/bzImage \
        -hda  images/rootfs.ext2 \
        -append "root=/dev/sda console=ttyS0" \
        -enable-kvm \
        -daemonize \
        -vnc :51 \
        -net nic,vlan=0,model=e1000,macaddr=52:54:00:12:34:01 \
        -net vde,vlan=0,sock=/tmp/switch \
        -net nic,vlan=1,model=e1000,macaddr=52:54:00:12:34:11 \
        -net vde,vlan=1,sock=/tmp/lan1.ctl[] \
        -net nic,vlan=2,model=e1000,macaddr=52:54:00:12:34:12 \
        -net vde,vlan=2,sock=/tmp/lan2.ctl[] \
        -net nic,vlan=3,model=e1000,macaddr=52:54:00:12:34:13 \
        -net vde,vlan=3,sock=/tmp/lan3.ctl[] \
        -net nic,vlan=4,model=e1000,macaddr=52:54:00:12:34:14 \
        -net vde,vlan=4,sock=/tmp/lan4.ctl[]
      </screen>
      <para>
        好，启动路由器，我们还要对网络接口做一下调整：
      </para>
      <screen>
<prompt># </prompt><userinput>cat /etc/network/interface</userinput>
# Configure Loopback
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet dhcp

auto br0
iface br0 inet static
address 192.168.1.1
netmask 255.255.255.0
broadcast 192.168.1.255
      </screen>
      <para>
        设置完配置后，别忘了重启设备或者<command>/etc/init.d/S40network restart</command>。
      </para>
    </section>
    <section>
      <title>创建<emphasis>lan侧PC</emphasis></title>
      <para>
        好了，路由器有了，我们接下来再添加一个PC连接到路由器的<emphasis>lan侧</emphasis>。
        <screen>
<prompt>liunx@liunx-G41MT-S2PT:~/Work/DocBook/work/code-farmer-note/examples/chapter7$ </prompt><userinput>cat lanPC.sh</userinput>
#!/bin/bash -
set -o nounset                              # Treat unset variables as an error

/usr/local/bin/qemu-system-i386 \
        -m 64M \
        -kernel images/openwrt-x86-generic-vmlinuz \
        -hda images/openwrt-x86-generic-rootfs-ext4.img \
        -append "root=/dev/sda console=ttyS0" \
        -enable-kvm \
        -daemonize \
        -vnc :52 \
        -net nic,vlan=0,model=e1000,macaddr=52:54:00:12:34:31 \
        -net vde,vlan=0,sock=/tmp/lan1.ctl
        </screen>
        这里，我们选择路由器中任意一个<emphasis>lanx.ctl</emphasis>接口就可以了。
      </para>
    </section>
    <section>
      <title>创建<emphasis>serverPC</emphasis></title>
      <para>
        好了，路由器有了，我们接下来再添加一个PC连接到路由器的<emphasis>lan侧</emphasis>。
        <screen>
<prompt>liunx@liunx-G41MT-S2PT:~/Work/DocBook/work/code-farmer-note/examples/chapter7$ </prompt><userinput>cat lanPC.sh</userinput>
#!/bin/bash -
set -o nounset                              # Treat unset variables as an error

/usr/local/bin/qemu-system-i386 \
        -m 64M \
        -kernel images/openwrt-x86-generic-vmlinuz \
        -hda images/openwrt-x86-generic-rootfs-ext4.img \
        -append "root=/dev/sda console=ttyS0" \
        -enable-kvm \
        -daemonize \
        -vnc :53 \
        -net nic,vlan=0,model=e1000,macaddr=52:54:00:12:34:32 \
        -net vde,vlan=0,sock=/tmp/lan2.ctl
        </screen>
        这里，我们选择路由器中任意一个<emphasis>lan2.ctl</emphasis>接口就可以了。
      </para>
    </section>
  </section>
  <section>
    <title>验证阶段</title>
    <para>
      好了，一切准备就绪，接下来我们要做3组测试，<emphasis>虚拟服务器</emphasis>、<emphasis>DMZ</emphasis>、<emphasis>一对一地址映射</emphasis>。
    </para>
    <section>
      <title>虚拟服务器</title>
      <para>
        <emphasis>虚拟服务器</emphasis>就是通过外网访问局域网内部的服务器。外网设备访问局域网设备，需要做端口映射，这里我们通过<emphasis>wanPC</emphasis>来访问<emphasis>serverPC</emphasis>的<emphasis>HTTP</emphasis>端口。
      </para>
      <para>
        首先开启<emphasis>serverPC</emphasis>，这里为了允许外部地址访问<emphasis>serverPC</emphasis>，我们需要关掉<emphasis>serverPC</emphasis>的防火墙，
        <screen>
<prompt>root@OpenWrt:/# </prompt><userinput>/etc/init.d/firewall stop</userinput>
        </screen>
        这样我们就可以随意访问<emphasis>serverPC</emphasis>的80端口了，此外，我们还要允许局域网内lan设备的互访，所以在<emphasis>router</emphasis>上添加一条规则：
      </para>
      <screen>
<prompt># </prompt><userinput>iptables -A FORWARD -i br0 -o br0 -j ACCEPT</userinput>
      </screen>
      <para>
        我们尝试访问<emphasis>serverPC</emphasis>的80端口：
      </para>
      <screen>
<prompt>root@OpenWrt:/# </prompt><userinput>nc 192.168.1.214 80</userinput>

HTTP/1.1 400 Bad Request
Connection: close
Content-Type: text/plain
Transfer-Encoding: chunked

B
Bad Request
0
      </screen>
      <para>
        OK，接下来通过<emphasis>wanPC</emphasis>访问一下：
      </para>
      <screen>
<prompt>root@OpenWrt:/# </prompt><userinput>nc 192.168.1.214 80</userinput>
nc: can't connect to remote host (192.168.1.214): Connection refused
      </screen>
      <para>
        结果显而易见，<emphasis>wanPC</emphasis>访问不到<emphasis>serverPC</emphasis>的地址的，只能访问到<emphasis>router</emphasis>，我们只有做端口映射才行！
      </para>
      <para>
        登录<emphasis>router</emphasis>，添加端口映射：
      </para>
      <screen>
<prompt># </prompt><userinput>iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 8080 -j DNAT --to-destination 192.168.1.214:80</userinput>
<prompt># </prompt><userinput>iptables -t filter -A FORWARD -i eth0 -d 192.168.1.214 -p tcp --dport 80 -j ACCEPT</userinput>
      </screen>
      <imageobject>
        <imagedata align="right" width="6in" format="PNG"
          fileref="../images/nfk-traversal.png"/>
      </imageobject>
    </section>
    <para>
      首先在<emphasis>PREROUTING</emphasis>添加地址映射，由于我们的<emphasis>FORWARD</emphasis>的默认策略是<emphasis>DROP</emphasis>的，所以我们需要放行到目的地址<emphasis>192.168.1.214</emphasis>端口<emphasis>80</emphasis>的数据包。
    </para>
    <para>
      接下来通过<emphasis>wanPC</emphasis>再访问一下：
    </para>
    <screen>
<prompt>root@OpenWrt:/# </prompt><userinput>nc 10.0.2.15 8080</userinput>

HTTP/1.1 400 Bad Request
Connection: close
Content-Type: text/plain
Transfer-Encoding: chunked

B
Bad Request
0
    </screen>
    <para>
      此时注意我们要访问的地址是<emphasis>router</emphasis>的地址，端口为映射的端口号。
    </para>
  </section>
</chapter>
