<chapter xml:id="chapter3" xmlns="http://docbook.org/ns/docbook" version="5.0" xml:lang="zh-CN"
  xmlns:xlink='http://www.w3.org/1999/xlink'>
  <title>第三章：搭建嵌入式系统</title>
  <para>
    <emphasis>嵌入式系统</emphasis>是一个很广泛的概念，简单的说，<emphasis>嵌入式系统</emphasis>
    是一个“小”系统，比如说手机，车载设备等，这里我们构建的<emphasis>嵌入式</emphasis>系统就是
    具有这个特点，比如说他的体积很小，启动速度快，功能单一，相对于PC系统来说，更加方便我们测试
    和实验，而且内存占用少，所以配置相对低的电脑也可以轻松运行，可以说物美价廉。
  </para>
  <section>
    <title>组装路由器</title>
    <para>
      一台路由器究竟由什么构成的呢？当然了，我们不是在讨论硬件电路的设计问题，不用关心电源了，电路
      布局之类的事情，我们关心是一台路由器是由哪些功能部分组成的。
    </para>
    <para>
      首先，路由器的职责就是帮助我们上网的，那是肯定的了，要上网，那至少要有一个WAN口了，WAN口，顾名
      思义，就是连接到电信运营商链路的端口了，他的前端可能是一只猫，两只狗，三只羊什么的东东，好了，
      那些都是运营商的工作，我们就不必关心了。
    </para>
    <para>
      好，接下来开始动手了！首先看看我们的<emphasis>路由器</emphasis>启动参数吧
    </para>
  </section>
  <section>
    <title>搭建“客户端”系统</title>
    <para>
      好了，外围环境搞定了，接下来就是要选择客户端系统了，一台路由器不仅仅有硬件系统构成的，还需要软件系统
      配合才能发挥作用，否则就是<emphasis>裸奔</emphasis>了。客户端系统的选用标准前面我已介绍过了，下面就
      开始编译客户端系统了。
    </para>
    <para>
      首先登场的是<emphasis>OpenWrt</emphasis>，这是一款很出名的开源路由器系统，当然是基于<emphasis>linux</emphasis>
      的了，那么<emphasis>OpenWrt</emphasis>已经就是一个路由系统了，作为嵌入式系统，他的体积很小，启动速度
      很快，加上其支持<emphasis>X86</emphasis>平台，很符合我们的要求。而且他包含了大量的开源软件，使得我们
      不必满世界的移植程序了，Perfact！
    </para>
    <para>
      获得<emphasis>OpenWrt</emphasis>系统的方式有以下几种：
      <orderedlist>
        <listitem>
          从源码进行编译
        </listitem>
        <listitem>
          获取编译好的二进制镜像系统
        </listitem>
      </orderedlist>
      编译<emphasis>OpenWrt</emphasis>也不难，可是时间上实在是太长了，如果你的电脑不够Power的话，那么还是省省吧，
      还好，<emphasis>OpenWrt</emphasis>为我们编译好了各种平台上镜像版本，同时还包括软件仓库，这样既节约了时间，
      又方便新手入门，只是一举多得。
    </para>
    <para>
      好，那么去哪下载官方的二进制镜像呢，看这里<ulink url="http://downloads.openwrt.org/"></ulink>。
    <imageobject>
      <imagedata align="left" width="10in" format="PNG"
        fileref="../images/openwrt-download.png"/>
    </imageobject>
    这么多选择，该选哪一个呢？这里我们关注有一下几个版本入口：
    <orderedlist>
      <listitem>backfire</listitem>
      <listitem>kamikaze</listitem>
      <listitem>snapshots</listitem>
    </orderedlist>
    <emphasis>backfire</emphasis>和<emphasis>kamikaze</emphasis>属于连个稳定的分支，正常使用没有太大问题，这里
    我们可以使用他们的<emphasis>x86</emphasis>版本，但是这里我们选择<emphasis>snapshots</emphasis>版本，虽然快照
    版本相对来说不是很稳定，但是代码更新很快，内核版本，软件包也更新，其实快照版本就是用来给大家测试用的，以便
    获取<emphasis>Bug</emphasis>的反馈，增强系统的稳定性，所以，本着参与的目的，我们选择<emphasis>snapshots</emphasis>
    版本，如果有问题的话，我们还可以反馈一些内容了。<emphasis>但是，需要注意的是，由于这是个快照版本，内核模块
      重新编译的话，是使得安装内核模块时失败</emphasis>，还好整个系统不是很大，我们只要及时跟新镜像就是了，而且
    也用不到所有的软件包的，所以够用了。
    <para>
      接下来，我们进入<emphasis>snapshots</emphasis>目录，下载镜像。
    <imageobject>
      <imagedata align="left" width="10in" format="PNG"
        fileref="../images/openwrt-download2.png"/>
    </imageobject>
    这里，我们只关注三个镜像文件：
    <orderedlist>
      <listitem>
        <ulink url="http://downloads.openwrt.org/snapshots/trunk/x86/openwrt-x86-generic-combined-ext4.img.gz">
          openwrt-x86-generic-combined-ext4.img.gz</ulink></listitem>
      <listitem><ulink url="http://downloads.openwrt.org/snapshots/trunk/x86/openwrt-x86-generic-rootfs-ext4.img.gz">
      openwrt-x86-generic-rootfs-ext4.img.gz</ulink></listitem>
  <listitem><ulink url="http://downloads.openwrt.org/snapshots/trunk/x86/openwrt-x86-generic-vmlinuz">
    openwrt-x86-generic-vmlinuz</ulink>
  </listitem>
    </orderedlist>
    <emphasis>openwrt-x86-generic-combined-ext4.img.gz</emphasis>包括了引导程序、内核和跟文件系统，优点是简单易用，
    缺点是无法挂载，所以导入配置文件的时候有些麻烦了，但是也没关系的，如果我们安装了<emphasis>openWrt</emphasis>
    自带的用户界面的话，可以导入/导出配置文件的，但是目前来说作用还不是很大，反而增加了复杂性，所以我们选择后面
    两个镜像来配合使用，前者只包含了根文件系统，后者是内核。
    </para>
    <para>
      好了，下面，见证奇迹的时刻到了，前面做了那么多艰苦卓绝的工作，该是出成果的时候了！
      先看一下我们的文件布局：
      <computeroutput>
        <literallayout>
liunx@liunx-G41MT-S2PT:~/Work/OpenWrt/work/openwrt$ tree
.
├── boot.sh
├── firewall
├── images
│   ├── openwrt-x86-generic-combined-ext4.img
│   ├── openwrt-x86-generic-combined-ext4.img.old
│   ├── openwrt-x86-generic-rootfs-ext4.img
│   └── openwrt-x86-generic-vmlinuz
├── network
├── qemu-ifdown
├── qemu-ifup
└── rootfs

2 directories, 9 files
liunx@liunx-G41MT-S2PT:~/Work/OpenWrt/work/openwrt$
        </literallayout>
      </computeroutput>
      再看我们的运行脚本：
      <computeroutput>
        <literallayout>
liunx@liunx-G41MT-S2PT:~/Work/OpenWrt/work/openwrt$ ls
boot.sh  firewall  images  network  qemu-ifdown  qemu-ifup  rootfs
liunx@liunx-G41MT-S2PT:~/Work/OpenWrt/work/openwrt$ clear
liunx@liunx-G41MT-S2PT:~/Work/OpenWrt/work/openwrt$ ls
boot.sh  firewall  images  network  qemu-ifdown  qemu-ifup  rootfs
liunx@liunx-G41MT-S2PT:~/Work/OpenWrt/work/openwrt$ cat qemu-ifdown
#!/bin/bash -

bridge=virbr0
brctl delif $bridge $1 || true
ifconfig $1 down
liunx@liunx-G41MT-S2PT:~/Work/OpenWrt/work/openwrt$ cat qemu-ifup
#!/bin/bash -

bridge=virbr0
ifconfig $1 0.0.0.0 promisc up
brctl addif $bridge $1
liunx@liunx-G41MT-S2PT:~/Work/OpenWrt/work/openwrt$ cat boot.sh
#!/bin/bash -
#===============================================================================
#
#          FILE: boot.sh
#
#         USAGE: ./boot.sh
#
#   DESCRIPTION:
#
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: ---
#        AUTHOR: YOUR NAME (),
#  ORGANIZATION:
#       CREATED: 2012年05月23日 17时47分46秒 CST
#      REVISION:  ---
#===============================================================================

set -o nounset                              # Treat unset variables as an error

/usr/local/bin/qemu-system-i386 \
        -m 64M \
        -kernel images/openwrt-x86-generic-vmlinuz \
        -hda images/openwrt-x86-generic-rootfs-ext4.img \
        -append "root=/dev/sda console=ttyS0" \
        -enable-kvm \
        -nographic \
        -usb \
        -net nic,vlan=3,model=ne2k_pci,macaddr="12:34:56:78:9a:00" \
        -net tap,vlan=3,ifname=openwrt0,script=qemu-ifup,downscript=qemu-ifdown \
        -net nic,vlan=1,model=pcnet,macaddr="12:34:56:78:9a:01" \
        -net socket,vlan=1,listen=:8010 \
        -net nic,vlan=2,model=pcnet,macaddr="12:34:56:78:9a:02" \
        -net socket,vlan=2,listen=:8011

liunx@liunx-G41MT-S2PT:~/Work/OpenWrt/work/openwrt$
        </literallayout>
      </computeroutput>
      看好了，大家！这里我们需要五个文件：
    <orderedlist>
      <listitem>boot.sh</listitem>
      <listitem>qemu-ifup</listitem>
      <listitem>qemu-ifdown</listitem>
      <listitem>images/openwrt-x86-generic-rootfs-ext4.img</listitem>
      <listitem>images/openwrt-x86-generic-vmlinuz</listitem>
    </orderedlist>
    你都找到了吗？
    </para>
    最后，激动人心的时刻到了，运行！
    <command>sudo ./boot.sh</command>
    <imageobject>
      <imagedata align="left" width="10in" format="PNG"
        fileref="../images/openwrt-cli.png"/>
    </imageobject>
    </para>
  </section>

</chapter>
